    # these are a few of the commands from my history for a new VPS running ubuntu that's going to be hosting the bridgeaddr
    # you are going to need a domain for this server so that bridgeaddr.domain.com has an A record pointing to it.
    # once running, other people can set up their LN addresses using this server, by simply setting up a few DNS records.
    # An Ln Address requires yet another domain purchase say zap.io, and the ln address could be anything@zap.io
    # The docs say to setup a CNAME record from zap.io to bridgeaddr.domain.com. I've found this is an issue because
    # CNAME's arent supposed to use the a "root" domain but rather a subdomain.rootdomain.com. So, if you use a CNAME
    # you would have to do subdomain.zap.io pointing to bridgeaddr.domain.com. However I found dnsimple.com will let you set 
    # an ALIAS record which achieves the result of no subdomain in your ln address! So: ALIAS	zap.io	bridgeaddr.domain.com

    # FYI I have no idea if the other lightning nodes work, I only fixed COMMANDO which is Core Lightning. Commando was broken because
    # the core lightning team changed the API (Removed RPC calls)

    # Good Luck!

    1  apt update && apt upgrade -y
    2  apt install git neovim
    3  git clone https://github.com/bimmerr2019/bridgeaddr
    4  cd bridgeaddr/
    6  sudo apt install -y debian-keyring debian-archive-keyring apt-transport-https
    7  curl -1sLf 'https://dl.cloudsmith.io/public/caddy/stable/gpg.key' | sudo gpg --dearmor -o /usr/share/keyrings/caddy-stable-archive-keyring.gpg
    8  curl -1sLf 'https://dl.cloudsmith.io/public/caddy/stable/debian.deb.txt' | sudo tee /etc/apt/sources.list.d/caddy-stable.list
    9  apt update
   10  apt install caddy
   13  cp Caddyfile /etc/caddy/Caddyfile
   14  sudo caddy validate --config /etc/caddy/Caddyfile
   15  sudo caddy fmt --overwrite /etc/caddy/Caddyfile
   16  sudo caddy validate --config /etc/caddy/Caddyfile
   17  sudo systemctl restart caddy
   17  sudo systemctl status caddy
   18  sudo journalctl -fu caddy
   41  # Create bridgeaddr user
   42  sudo useradd -r -s /bin/false bridgeaddr
   43  # Create and set up directory
   44  sudo mkdir -p /opt/bridgeaddr
   46  sudo chown -R bridgeaddr:bridgeaddr /opt/bridgeaddr
   19  wget https://go.dev/dl/go1.23.4.linux-amd64.tar.gz
   20  echo 'export PATH=$PATH:/usr/local/go/bin' >> ~/.bashrc
   21  go version
   24  apt install build-essential
  361  go mod init bridgeaddr
  362  go get github.com/jb55/lnsocket/go
  363  go get github.com/fiatjaf/go-lnurl
  364  go get github.com/gorilla/mux
  365  go get github.com/kelseyhightower/envconfig
  366  go get github.com/rs/zerolog
   28  cp bridgeaddr.service /etc/systemd/system/bridgeaddr.service   # put in your domain name for the server hosting bridgeaddr
   25  make deploy
   29  # Reload systemd to recognize the new service
   30  sudo systemctl daemon-reload
   31  # Enable the service to start on boot
   32  sudo systemctl enable bridgeaddr
   33  # Start the service
   34  sudo systemctl start bridgeaddr
   35  # Check the status
   36  sudo systemctl status bridgeaddr
   37  # Check the logs if needed
   38  sudo journalctl -fu bridgeaddr
   40  sudo nvim /etc/systemd/system/bridgeaddr.service
